[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\hongs\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\hongs\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 132.6647ms
[debug]       Load.loadUnit: defsScala took 0.5974ms
[debug] [Loading] Scanning directory C:\Users\hongs\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hongs\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.3716 ms
[debug]           Load.resolveProject(global-plugins) took 66.7844ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\hongs\.sbt\1.0\plugins, plugins: List(<none>))) took 143.3689ms
[debug] [Loading] Done in C:\Users\hongs\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 185.6355ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4646ms
[debug]     Load.loadUnit(file:/C:/Users/hongs/.sbt/1.0/plugins/, ...) took 333.7978ms
[debug]   Load.apply: load took 508.9122ms
[debug]   Load.apply: resolveProjects took 7.1594ms
[debug]   Load.apply: finalTransforms took 84.1924ms
[debug]   Load.apply: config.delegates took 10.9188ms
[debug]   Load.apply: Def.make(settings)... took 1177.9607ms
[debug]   Load.apply: structureIndex took 128.5528ms
[debug]   Load.apply: mkStreams took 1.9197ms
[info] loading global plugins from C:\Users\hongs\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 17768.9597ms
[debug]           Load.loadUnit: plugins took 26.4452ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\hongs\Google Drive\SISLAB\Demo\Alu\project
[debug]             Load.loadUnit: mkEval took 15.3648ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hongs\Google Drive\SISLAB\Demo\Alu\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8241 ms
[info] loading settings for project alu-build from idea1.sbt ...
[debug]               Load.resolveProject(alu-build) took 8.4932ms
[debug]             Load.loadTransitive: finalizeProject(Project(id alu-build, base: C:\Users\hongs\Google Drive\SISLAB\Demo\Alu\project, plugins: List(<none>))) took 10.7862ms
[debug] [Loading] Done in C:\Users\hongs\Google Drive\SISLAB\Demo\Alu\project, returning: (alu-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2733.013ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.7884ms
[debug]         Load.loadUnit(file:/C:/Users/hongs/Google%20Drive/SISLAB/Demo/Alu/project/, ...) took 2765.2814ms
[debug]       Load.apply: load took 2766.7113ms
[debug]       Load.apply: resolveProjects took 0.1098ms
[debug]       Load.apply: finalTransforms took 8.8556ms
[debug]       Load.apply: config.delegates took 0.3679ms
[debug]       Load.apply: Def.make(settings)... took 78.3083ms
[debug]       Load.apply: structureIndex took 26.0338ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\hongs\Google Drive\SISLAB\Demo\Alu\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3441.5902ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\hongs\Google Drive\SISLAB\Demo\Alu
[debug]       Load.loadUnit: mkEval took 0.22ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hongs\Google Drive\SISLAB\Demo\Alu, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.815 ms
[info] loading settings for project alu from build.sbt ...
[debug]         Load.resolveProject(alu) took 44.4199ms
[debug]       Load.loadTransitive: finalizeProject(Project(id alu, base: C:\Users\hongs\Google Drive\SISLAB\Demo\Alu, plugins: List(<none>))) took 48.7063ms
[debug] [Loading] Done in C:\Users\hongs\Google Drive\SISLAB\Demo\Alu, returning: (alu)
[debug]     Load.loadUnit: loadedProjectsRaw took 1907.9976ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.8122ms
[debug]   Load.loadUnit(file:/C:/Users/hongs/Google%20Drive/SISLAB/Demo/Alu/, ...) took 5366.3612ms
[debug] Load.apply: load took 5368.1391ms
[debug] Load.apply: resolveProjects took 0.1095ms
[debug] Load.apply: finalTransforms took 34.7738ms
[debug] Load.apply: config.delegates took 0.6446ms
[debug] Load.apply: Def.make(settings)... took 81.933ms
[debug] Load.apply: structureIndex took 29.1821ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to alu (in build file:/C:/Users/hongs/Google%20Drive/SISLAB/Demo/Alu/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64963 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64963, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to alu (in build file:/C:/Users/hongs/Google%20Drive/SISLAB/Demo/Alu/)
[debug] > Exec(idea-shell, None, None)
